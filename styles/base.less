// ---------------------------------------------------------------------------
//  Base
// ---------------------------------------------------------------------------

    atom-text-editor, :host {
        background: @color-charcoal;
        color: @color-white_dark;
        line-height: 1.5em;

        .selection .region { background: rgba(255, 255, 255, @opacity-highlight); }
        .tile, .lines { background: @image-noise; }

        &::shadow .wrap-guide { background: @color-charcoal_light; }

    // -------------------------------------
    //  Scrollbar
    // -------------------------------------
        .vertical-scrollbar { top: 5px; right: 5px; bottom: 5px; }

    // -------------------------------------
    //  Gutter
    // -------------------------------------
        .gutter { background: @color-midnight; }

            .line-numbers { box-shadow: inset -1px 0 0 rgba(255, 255, 255, .1); }

            .line-number {
                color: @color-grey;

                &.cursor-line {
                    background: rgba(255, 255, 255, .04);
                    box-shadow: inset -1px 0 0 rgba(255, 255, 255, @opacity-highlight + .07); }

                &.cursor-line-no-selection {
                    background: rgba(0, 0, 0, .4);
                    box-shadow: inset -1px 0 0 rgba(255, 255, 255, .2);

                    &.git-line-removed { padding-left: 10px; }
                }
            }

    // -------------------------------------
    //  Lines
    // -------------------------------------
        .lines {
            padding-left: @indent-padding;
            box-shadow: none; }

            .indent-guide {
                box-shadow: none;

                &:not(:first-child) { box-shadow: inset 1px 0 rgba(255, 255, 255, .1); }
            }

            .line.cursor-line {
                background: rgba(0, 0, 0, .3);
                box-shadow: -( @indent-padding ) 0 0 rgba(0, 0, 0, .3); }

                .invisible-character { color: @color-brown_dark; }

    // -------------------------------------
    //  Source code
    // -------------------------------------
        .text, .source {
            .comment {
                font-style: italic;
                color: @color-brown_dark; }

            .meta {
                &.function .name { color: @color-blue; }
                &.brace { color: @color-brown_light; }
            }

            .keyword {
                // Coffee: eg. new, =, -, +, :, isnt, is
                &.operator { color: @color-brown; }

                // Coffee: eg. do, if, return, then, switch, for
                &.control { color: @color-orange_dark; }
            }

            .variable {
                &.assignment { color: @color-beige; }

                // Coffee: function parameters
                &.parameter { color: @color-yellow; }

                // Coffee: @variable
                &.instance { color: @color-green_sea; }
            }

            .string {
                color: @color-green;

                &.regexp { color: @color-orange; }

                // Coffee: #{ variable }
                .embedded.source { color: @color-green_sea-2; }
            }

            .storage {
                // Coffee: ->
                &.type.function { color: @color-brown; }
                &.modifier { color: @color-brown; }
                &.class { color: @color-red_pale; }
            }

            .entity {
                &.instance { color: @color-blue_pale; }
                &.type.object { color: @color-red_pale; }
            }

            .support {
                // Coffee: eg. window, document
                &.class { color: @color-blue_pale; }

                // Coffee: eg. push, indexOf
                &.function { color: @color-orange; }
            }

            // Coffee: eg. null, false, true, undefined
            .constant { color: @color-yellow_light; }

            // Coffee: eg. this
            .language.variable { color: @color-yellow_light; }
        }
    }

    // Fix One Dark tab colors
    atom-pane .tab-bar .tab[data-type="TextEditor"] {
        &::after {
            background: @color-charcoal @image-noise;
            border-bottom: none; }
        &.active {
            color: @color-white_dark;

            // forces active tab elements to always be on top of the background
            div { z-index: 10; }
        }
    }
